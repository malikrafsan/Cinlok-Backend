image: node:lts-alpine

.use_pnpm:
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store
  before_script:
    - npm i -g pnpm
    - pnpm config set store-dir .pnpm-store
    - pnpm i --frozen-lockfile

stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  - deploy

sonarqube-check:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
  dependencies:
    - unit-test-job

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  extends: .use_pnpm
  script:
    - pnpm test
  artifacts:
    paths:
      - coverage/lcov.info

lint-test-job:
  stage: test
  extends: .use_pnpm
  script:
    - pnpm lint

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  extends: .use_pnpm
  script:
    - pnpm build

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  only:
    - main
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  environment: production
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.prod"
      --destination "${CI_REGISTRY_IMAGE}"
